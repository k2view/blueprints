{{ $namespace := default dict .Values.namespace }}
{{ $deploy := default dict .Values.deploy }}
{{ $type := default "StatefulSet" $deploy.type }}
{{ $global := default dict .Values.global }}
{{ $labels := $global.labels | default (list) }}
{{ $global_annotations := $global.annotations | default (list) }}
{{ $serviceAccount := default dict .Values.serviceAccount }}
{{ $serviceAccountName := default .Release.Name (default $namespace.name $serviceAccount.name) }}
{{ $storage := default dict .Values.storage }}
{{ $container := default dict .Values.container }}
{{ $resource_annotations := $container.annotations | default (list) }}
{{ $imageRepoSecret := default dict $container.image.repoSecret }}
{{ $mountSecret := default dict .Values.mountSecret }}
{{ $mountSecretB64enc := default dict .Values.mountSecretB64enc }}
{{ $affinity := default dict .Values.affinity }}
{{ $secretsList := default dict .Values.secretsList }}
{{ $initSecretsList := default dict .Values.initSecretsList }}
{{ $resource_allocation := default dict $container.resource_allocation }}
{{ $limits := default dict $resource_allocation.limits }}
{{ $requests := default dict $resource_allocation.requests }}
{{ $livenessProbe := default dict $container.livenessProbe }}
{{ $readinessProbe := default dict $container.readinessProbe }}

{{ if eq $type "Deployment" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fabric-deployment
  namespace: {{ default .Release.Name $namespace.name }}
  labels: &id001
    app: fabric
    {{- range $label := $labels }}
    {{ $label.name }}: {{ $label.value }}
    {{- end }}
    {{- if eq $serviceAccount.provider "azure" }}
    azure.workload.identity/use: "true"
    {{- end }}
  {{- if or $global_annotations $resource_annotations }}
  annotations:
    {{- range $annotation := $global_annotations }}
    {{ $annotation.key }}: {{ $annotation.value | quote }}
    {{- end }}
    {{- range $annotation := $resource_annotations }}
    {{ $annotation.key }}: {{ $annotation.value | quote }}
    {{- end }}
  {{- end }}
spec:
    replicas: {{ $container.replicas | default 1 }}
    selector:
      matchLabels:
        app: fabric
    template:
        metadata:
          labels: *id001
        spec:
          {{- if $imageRepoSecret.enabled | default false }}
          imagePullSecrets:
            - name: {{ $imageRepoSecret.name }}
          {{- end }}
          {{- if ne $serviceAccount.name "" }}
          serviceAccountName: {{ $serviceAccountName }}
          {{- else if $serviceAccount.create | default false }}
          serviceAccountName: {{ $serviceAccountName }}-sa
          {{- end }}
          {{- if or (eq $affinity.type "affinity") (eq $affinity.type "anti-affinity") }}
          affinity:
            {{- if eq $affinity.type "affinity" }}
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: {{ $affinity.label.name }}
                    operator: In
                    values:
                    - {{ $affinity.label.value }}
            {{- else if eq $affinity.type "anti-affinity" }}
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: {{ $affinity.label.name }}
                    operator: NotIn
                    values:
                    - {{ $affinity.label.value }}
            {{- end }}
          {{- end }}
          initContainers:
          - command:
            - /bin/bash
            args:
            - -l
            - -c
            - ./docker-entrypoint.sh
            imagePullPolicy: IfNotPresent
            image: {{ $container.image.url }}
            name: init-fabric
            resources:
              limits:
                memory: {{ $limits.memory | default "8Gi" }}
                cpu: {{ $limits.cpu | default "2" }}
              requests:
                memory: {{ $requests.memory | default "4Gi" }}
                cpu: {{ $requests.cpu | default "1" }}
            env:
            - name: NAMESPACE
              value: {{ default .Release.Name $namespace.name }}
            # common secrets
            {{- range $secret := $secretsList }}
            {{- range $key, $value := $secret.data }}
            {{- if not (empty $value) }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secret.name }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
            {{- end }}
            # init secrets
            {{- range $secret := $initSecretsList }}
            {{- range $key, $value := $secret.data }}
            {{- if not (empty $value) }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secret.name }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
            {{- end }}
            volumeMounts:
            - name: fabric-storage
              mountPath: /opt/apps/fabric/workspace
            - name: {{ $mountSecret.name }}
              mountPath: {{ $mountSecret.mountPath }}
            - name: {{ $mountSecretB64enc.name }}
              mountPath: {{ $mountSecretB64enc.mountPath }}
          containers:
          - command:
            - /bin/bash
            args:
            - -l
            - -c
            - {{ $container.docker_entrypoint_command | default "./docker-entrypoint.sh && tail -F workspace/logs/k2fabric.log" }}
            imagePullPolicy: IfNotPresent
            image: {{ $container.image.url }}
            name: fabric
            lifecycle:
              preStop:
                exec:
                  command: ["/bin/bash", "-l", "-c", "timeout 120 k2fabric stop || true"]
            ports:
            - containerPort: 3213
            - containerPort: 7170
            - containerPort: 7070
            - containerPort: 9100          
            securityContext:
              allowPrivilegeEscalation: false
            resources:
              limits:
                memory: {{ $limits.memory | default "8Gi" }}
                cpu: {{ $limits.cpu | default "2" }}
              requests:
                memory: {{ $requests.memory | default "4Gi" }}
                cpu: {{ $requests.cpu | default "1" }}
            env:
            - name: NAMESPACE
              value: {{ default .Release.Name $namespace.name }}
            {{- range $secret := $secretsList }}
            {{- range $key, $value := $secret.data }}
            {{- if not (empty $value) }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secret.name }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
            {{- end }}
            livenessProbe:
              initialDelaySeconds: {{ $livenessProbe.initialDelaySeconds | default 120 }}
              periodSeconds: {{ $livenessProbe.periodSeconds | default 60 }}
              timeoutSeconds: {{ $livenessProbe.timeoutSeconds | default 15 }}
              failureThreshold: {{ $livenessProbe.failureThreshold | default 3 }}
              successThreshold: {{ $livenessProbe.successThreshold | default 1 }}
              exec:
                command: ["/bin/bash", "-l", "-c", "/opt/apps/fabric/isAlive.sh"]
            readinessProbe:
              initialDelaySeconds: {{ $readinessProbe.initialDelaySeconds | default 30 }}
              periodSeconds: {{ $readinessProbe.periodSeconds | default 60 }}
              timeoutSeconds: {{ $readinessProbe.timeoutSeconds | default 15 }}
              successThreshold: {{ $readinessProbe.successThreshold | default 2 }}
              failureThreshold: {{ $readinessProbe.failureThreshold | default 5 }}
              exec:
                command: ["/bin/bash", "-l", "-c", "/opt/apps/fabric/isAlive.sh"]
            volumeMounts:
            - name: fabric-storage
              mountPath: /opt/apps/fabric/workspace
            - name: fabric-storage-private
              mountPath: /opt/apps/fabric/temp
            {{- if $mountSecret.enabled | default false }}
            - name: {{ $mountSecret.name }}
              mountPath: {{ $mountSecret.mountPath }}
            {{- end }}
            {{- if $mountSecretB64enc.enabled | default false }}
            - name: {{ $mountSecretB64enc.name }}
              mountPath: {{ $mountSecretB64enc.mountPath }}
            {{- end }}
          terminationGracePeriodSeconds: 150
          {{- if $storage.securityContext }}
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          {{- end }}
          volumes:
          - name: fabric-storage
            persistentVolumeClaim:
              claimName: fabric-claim
          - name: fabric-storage-private
            emptyDir:
              sizeLimit: 10Gi
          {{- if $mountSecret.name }}
          - name: {{ $mountSecret.name }}
            secret:
              secretName: {{ $mountSecret.name }}
          {{- end }}
          {{- if $mountSecretB64enc.name }}
          - name: {{ $mountSecretB64enc.name }}
            secret:
              secretName: {{ $mountSecretB64enc.name }}
          {{- end }}
    strategy:
      type: Recreate
{{ end }}
