
# Global labels for all Fabric resources
#global:
  # labels:
  #   - name: label-name
  #     value: label-value
  # annotations:
  #   - key: "app.kubernetes.io/component"
  #     value: "fabric"
  #   - key: "kubernetes.io/description"
  #     value: "K2View Fabric data virtualization platform"


# Namespace to deploy Fabric into
namespace:
  create: false  # Create namespace if true
  name: "space-tenant"


# Deployment type: Deployment (dev) or StatefulSet (prod)
deploy:
  type: Deployment


# ServiceAccount settings (IAM integration)
serviceAccount:
  create: true  # Create new ServiceAccount if true
  name: ""      # Existing ServiceAccount name if create is false
  provider: ""  # aws | gcp | azure
  arn: ""       # AWS IAM Role ARN
  gcp_service_account_name: "" # GCP full SA name
  project_id: "" # GCP project
  cluster_name: "" # GCP cluster
  azure_client_id: "" # Azure Managed Identity client ID

# Container settings
container:
  replicas: 1
  annotationsList:
    - name: description
      value: Fabric on Kubernetes
  resource_allocation:
    limits:
      memory: 16Gi
      cpu: '4'
    requests:
      memory: 12Gi
      cpu: '3'
  image:
    url: ""
    repoSecret:
      name: "registry-secret"
      enabled: false
      dockerRegistry:
        auths:
          "docker.share.cloud.k2view.com":
            username: ""
            password: ""


# Service settings
service:
  listening_port: 3213

# Storage settings
storage:
  pvc:
    enabled: true  # Create PVC if true, else use ephemeral
  securityContext: true
  class: managed
  allocated_amount: 10Gi


# Autoscaling (HPA)
scaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPU: 90


# Network policies
networkPolicy:
  egress:
    enabled: false
  ingress:
    enabled: false
    allowedNamespaces:
      name: grafana-agent
    allowedPods:
      app.kubernetes.io/instance: grafana-agent
    allowedIPs:
      # - 10.0.0.1/16

# Ingress Settings
# These settings control the ingress configuration for the Fabric deployment.
# Ingress is used to expose the Fabric service to external traffic.
# If enabled, an ingress resource will be created.
ingress:
  enabled: true
  class_name: "nginx"
  type: "nginx"
  appgw_ssl_certificate_name: ""
  cert_manager:
    enabled: false
    cluster_issuer: ""
  # Ingress Hostname
  # This is the hostname that will be used to access the Fabric service.
  # It should be a fully qualified domain name (FQDN).
  host: space-tenant.domain
  path: false # boolean true uses same value as namespace or hardcoded "string"
  subdomain: false # boolean true uses same value as namespace or hardcoded "string"
  tlsSecret:
    enabled: false

  custom_annotations:
    enabled: false
    annotations:
      - key: nginx.ingress.kubernetes.io/proxy-body-size
        value: "0"
      - key: nginx.ingress.kubernetes.io/proxy-read-timeout
        value: "86400"
      - key: nginx.ingress.kubernetes.io/proxy-send-timeout
        value: "900"
      - key: nginx.ingress.kubernetes.io/ssl-redirect
        value: "false"

# Mounting Secrets Settings
# These settings control how secrets are mounted into the Fabric pods.
mountSecret:
    name: config-secrets
    # True to mount the secret on both init container and fabric pod, false for mount only on init container
    enabled: false 
    # Path where the secrets will be mounted in the Fabric pod.
    mountPath: /opt/apps/fabric/config-secrets
    # Data to be mounted as secrets.
    # The keys in this map will be the filenames in the mountPath directory.
    data:
      # Fabric configuration.
      # Those settings will be applied to the Fabric config.ini file.
      config: |
        [fabricdb]
        MDB_DEFAULT_CACHE_PATH=/opt/apps/fabric/pod_tmp/fdb_cache

        [default_pubsub]
        TYPE=MEMORY

        [common_area_pubsub]
        TYPE=MEMORY

        [fabric]
        WEB_SESSION_EXPIRATION_TIME_OUT=540
        ENABLE_BROADWAY_DEBUG_SERVLET=true
        ENABLE_DB_INTERFACE_PROXY=true
        WEBSERVER_FILTERS=[{"class":"com.k2view.cdbms.ws.ProxyForward","patterns":["/studio/*"],"params":{"target":"http://localhost:3000","isStaticTarget":true}},{"class":"com.k2view.cdbms.ws.ProxyForward","patterns":["/socket.io/*"],"params":{"target":"http://localhost:3000","isStaticTarget":false}}]
        OVERRIDE_API_SCHEMA=HTTPS
        OVERRIDE_API_PORT=443
        SERVER_AUTHENTICATOR=fabric

        [default_session]
        RECONNECT_MAX_DELAY_MS=1000

        [system_db]
        SYSTEM_DB_TYPE=SQLITE
        SYSTEM_DB_HOST=/opt/apps/fabric/workspace/internal_db
      # Additional files to be copied to the Fabric pod.
      # The logic mainly used to copy files from mounted secrets to the pod persistent volume
      # 
      # Example:
      # cp_files: "/opt/apps/fabric/config-secrets/FILE_1 /opt/apps/fabric/workspace/FILE_1"
      cp_files: ''
      # IDP certificate in plain text to load to fabric truststore.
      # Example: "-----BEGIN CERTIFICATE-----\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n-----END CERTIFICATE-----"
      idp_cert: ''

# Mounting Base64 Secrets Settings
# Same logic as mountSecret, but for base64 encoded secrets.
mountSecretB64enc:
    name: mount-b64-secrets
    enabled: false # true for mount the secret on fabric pod, false for mount only on init container
    mountPath: /opt/apps/fabric/config-secrets
    data:
      placeholder: ''

# Environment Variables Settings
# These settings control the environment variables that are set in the Fabric pods.
secretsList:
  - name: common-env-secrets
    data:
      PROJECT_ID: ''
      PROJECT_NAME: ''
      SPACE_NAME: ''
      MAX_HEAP: '10Gi'


# Init Secrets Environment Variables Settings
# These settings control the environment variables that are set in the init container of the Fabric pods or required for initialization.
initSecretsList:
  - name: config-init-secrets
    data:
      CONFIG_UPDATE_FILE: '/opt/apps/fabric/config-secrets/config'
      COPY_FILES: '/opt/apps/fabric/config-secrets/cp_files'
      IDP_CERT_PATH: ''
      IDP_ROLE: ''
      GIT_BRANCH: ''
      GIT_PATH_IN_REPO: ''
      GIT_REPO: ''
      GIT_TOKEN: ''
      START_FABRIC: 'false' 

# Pod Affinity Settings
# These settings control the pod affinity and anti-affinity rules for the Fabric deployment.
affinity:
  # Options: affinity, anti-affinity, none
  type: none 
  label: 
    name: topology.kubernetes.io/zone
    value: region-a
