
{{- $namespace := default dict .Values.namespace }}
{{- $namespace_name := default .Release.Name $namespace.name }}
{{- $image := default dict .Values.image }}
{{- $serviceAccount := default dict .Values.serviceAccount }}
{{- $repoSecret := default dict .Values.repoSecret }}
{{- $resources := default dict .Values.resources }}
{{- $limits := default dict $resources.limits }}
{{- $requests := default dict $resources.requests }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ $namespace_name }}
  labels:
    app: k2view-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k2view-agent
  template:
    metadata:
      labels:
        app: k2view-agent
    spec:
      {{- if $image.addDockerRegistry | default false }}
      imagePullSecrets:
        -name: {{ $image.dockerRegistrySecret }}
      {{- end }}
      {{- if $serviceAccount.attach | default false }}
      serviceAccountName: {{ $serviceAccount.name }}
      {{- end }}
      containers:
        - name: k2view-agent
          image: {{ $image.url }}
          imagePullPolicy: IfNotPresent
          env:
            {{- range $key, $value :=  .Values.secrets }}
            {{- if not (empty $value) }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: agent-config-secrets
                  key: {{ $key }}
            {{- end }}
            {{- end }}
            {{- range $key, $value :=  .Values.secrets_from_file }}
            {{- if not (empty $value) }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: agent-config-secrets
                  key: {{ $key }}
            {{- end }}
            {{- end }}
            {{- range .Values.externalSecrets }}
            - name: {{ .varName }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .key }}
            {{- end }}
            {{- if $serviceAccount.create }}
            - name: kubeToken
              valueFrom:
                secretKeyRef:
                  name: {{ $namespace_name }}-secret
                  key: token
            {{- end }}
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - ps aux | grep K2v-Agent | grep -v grep
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            limits:
              memory: {{ default "256Mi" $limits.memory }}
              cpu: {{ default "0.4" $limits.cpu }}
            requests:
              memory: {{ default "128Mi" $requests.memory }}
              cpu: {{ default "0.1" $requests.cpu }}
